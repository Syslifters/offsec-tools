name: Build and publish (pre)release

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go
      run: |
        sudo chmod 777 /opt
        
        # echo Installing Go
        # mkdir -p /opt/go
        # curl -L https://go.dev/dl/go1.25.1.linux-amd64.tar.gz -o go.tar.gz
        # tar -xzf go.tar.gz -C /opt
        # sudo ln -f -s /opt/go/bin/go /usr/bin/go

        echo Installing Go for Windows 7 compatibility
        mkdir -p /opt/go-win7
        curl -L https://github.com/XTLS/go-win7/releases/download/patched-1.25.1/go-for-win7-linux-amd64.zip -o go-win7.zip
        unzip -qq go-win7.zip -d /opt/go-win7
        sudo ln -f -s /opt/go-win7/bin/go /usr/bin/go-win7
    - name: Download cyclonedx-gomod
      uses: CycloneDX/gh-gomod-generate-sbom@v2
      with:
        version: v1

    - name: Checkout code with all commits
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Run this after checkout so that we can cache/restore Go modules
    - name: Set up Go 1.25.1
      uses: actions/setup-go@v6
      with:
        go-version: '1.25.1' # The Go version to download (if necessary) and use.  

    - name: Build
      run: ./build.ps1
      shell: pwsh

    - name: Remove latest devbuild
      continue-on-error: true
      run: gh release delete "devbuild" --cleanup-tag
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create tag "devbuild" for current commit
      uses: rickstaa/action-create-tag@v1
      if: startsWith(github.ref, 'refs/tags/') != true
      with:
        tag: "devbuild"
        force_push_tag: true
        message: "Latest development build"

    # - name: Generate release changelog
    #   uses: janheinrichmerker/action-github-changelog-generator@v2.3
    #   with:
    #     token: ${{ secrets.GITHUB_TOKEN }} 
    #     output: CHANGELOG.txt
    #     issues: false
    #     sinceTag: "latestrelease"

    - name: Pre-release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/') != true
      with:
        tag_name: "devbuild"
        prerelease: true
        # body_path: CHANGELOG.txt
        generate_release_notes: false
        files: |
          binaries/*

    - name: Create tag "latestrelease" for current commit
      uses: rickstaa/action-create-tag@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        tag: "latestrelease"
        force_push_tag: true
        message: "Latest release build"

    - name: Release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        generate_release_notes: false
        files: |
          binaries/*
